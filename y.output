Terminals unused in grammar

   BEGIN1
   END
   NEWLINE


State 52 conflicts: 1 shift/reduce


Grammar

    0 $accept: Entire_Program $end

    1 Entire_Program: Declarations Program

    2 Declarations: DECL DeclList ENDDECL
    3             | DECL ENDDECL

    4 DeclList: DeclList Decl
    5         | Decl

    6 Decl: Type VarList

    7 Type: INT
    8     | STR

    9 VarList: VarList COMMA ID
   10        | VarList COMMA MUL ID
   11        | VarList COMMA ID '[' NUM ']'
   12        | VarList COMMA ID '[' NUM ']' '[' NUM ']'
   13        | ID
   14        | MUL ID
   15        | ID '[' NUM ']'
   16        | ID '[' NUM ']' '[' NUM ']'

   17 Program: Slist

   18 Slist: Slist Stmt
   19      | Stmt

   20 Stmt: InputStmt
   21     | OutputStmt
   22     | AsgStmt
   23     | Ifstmt
   24     | Whilestmt

   25 InputStmt: READ '(' Var ')'

   26 OutputStmt: WRITE '(' E ')'

   27 AsgStmt: Var EQUALSTO E

   28 Ifstmt: IF '(' E ')' then Slist Else Slist ENDIF
   29       | IF '(' E ')' then Slist ENDIF

   30 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE

   31 E: E PLUS E
   32  | E MINUS E
   33  | E MUL E
   34  | E DIV E
   35  | E LT E
   36  | E GT E
   37  | E LE E
   38  | E GE E
   39  | E NE E
   40  | E EQ E
   41  | '(' E ')'
   42  | Var
   43  | NUM

   44 Var: ID
   45    | ID '[' E ']'
   46    | ID '[' E ']' '[' E ']'
   47    | MUL ID
   48    | '&' ID


Terminals, with rules where they appear

$end (0) 0
'&' (38) 48
'(' (40) 25 26 28 29 30 41
')' (41) 25 26 28 29 30 41
'[' (91) 11 12 15 16 45 46
']' (93) 11 12 15 16 45 46
error (256)
NUM (258) 11 12 15 16 43
PLUS (259) 31
MINUS (260) 32
MUL (261) 10 14 33 47
DIV (262) 34
ID (263) 9 10 11 12 13 14 15 16 44 45 46 47 48
READ (264) 25
WRITE (265) 26
BEGIN1 (266)
END (267)
NEWLINE (268)
EQUALSTO (269) 27
IF (270) 28 29
then (271) 28 29
ENDIF (272) 28 29
Else (273) 28
WHILE (274) 30
ENDWHILE (275) 30
DO (276) 30
EQ (277) 40
NE (278) 39
LT (279) 35
GT (280) 36
LE (281) 37
GE (282) 38
DECL (283) 2 3
ENDDECL (284) 2 3
INT (285) 7
STR (286) 8
COMMA (287) 9 10 11 12


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
Entire_Program (39)
    on left: 1, on right: 0
Declarations (40)
    on left: 2 3, on right: 1
DeclList (41)
    on left: 4 5, on right: 2 4
Decl (42)
    on left: 6, on right: 4 5
Type (43)
    on left: 7 8, on right: 6
VarList (44)
    on left: 9 10 11 12 13 14 15 16, on right: 6 9 10 11 12
Program (45)
    on left: 17, on right: 1
Slist (46)
    on left: 18 19, on right: 17 18 28 29 30
Stmt (47)
    on left: 20 21 22 23 24, on right: 18 19
InputStmt (48)
    on left: 25, on right: 20
OutputStmt (49)
    on left: 26, on right: 21
AsgStmt (50)
    on left: 27, on right: 22
Ifstmt (51)
    on left: 28 29, on right: 23
Whilestmt (52)
    on left: 30, on right: 24
E (53)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43, on right: 26 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 41 45 46
Var (54)
    on left: 44 45 46 47 48, on right: 25 27 42


State 0

    0 $accept: . Entire_Program $end

    DECL  shift, and go to state 1

    Entire_Program  go to state 2
    Declarations    go to state 3


State 1

    2 Declarations: DECL . DeclList ENDDECL
    3             | DECL . ENDDECL

    ENDDECL  shift, and go to state 4
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    DeclList  go to state 7
    Decl      go to state 8
    Type      go to state 9


State 2

    0 $accept: Entire_Program . $end

    $end  shift, and go to state 10


State 3

    1 Entire_Program: Declarations . Program

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    Program     go to state 18
    Slist       go to state 19
    Stmt        go to state 20
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 4

    3 Declarations: DECL ENDDECL .

    $default  reduce using rule 3 (Declarations)


State 5

    7 Type: INT .

    $default  reduce using rule 7 (Type)


State 6

    8 Type: STR .

    $default  reduce using rule 8 (Type)


State 7

    2 Declarations: DECL DeclList . ENDDECL
    4 DeclList: DeclList . Decl

    ENDDECL  shift, and go to state 27
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    Decl  go to state 28
    Type  go to state 9


State 8

    5 DeclList: Decl .

    $default  reduce using rule 5 (DeclList)


State 9

    6 Decl: Type . VarList

    MUL  shift, and go to state 29
    ID   shift, and go to state 30

    VarList  go to state 31


State 10

    0 $accept: Entire_Program $end .

    $default  accept


State 11

   47 Var: MUL . ID

    ID  shift, and go to state 32


State 12

   44 Var: ID .
   45    | ID . '[' E ']'
   46    | ID . '[' E ']' '[' E ']'

    '['  shift, and go to state 33

    $default  reduce using rule 44 (Var)


State 13

   25 InputStmt: READ . '(' Var ')'

    '('  shift, and go to state 34


State 14

   26 OutputStmt: WRITE . '(' E ')'

    '('  shift, and go to state 35


State 15

   28 Ifstmt: IF . '(' E ')' then Slist Else Slist ENDIF
   29       | IF . '(' E ')' then Slist ENDIF

    '('  shift, and go to state 36


State 16

   30 Whilestmt: WHILE . '(' E ')' DO Slist ENDWHILE

    '('  shift, and go to state 37


State 17

   48 Var: '&' . ID

    ID  shift, and go to state 38


State 18

    1 Entire_Program: Declarations Program .

    $default  reduce using rule 1 (Entire_Program)


State 19

   17 Program: Slist .
   18 Slist: Slist . Stmt

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    $default  reduce using rule 17 (Program)

    Stmt        go to state 39
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 20

   19 Slist: Stmt .

    $default  reduce using rule 19 (Slist)


State 21

   20 Stmt: InputStmt .

    $default  reduce using rule 20 (Stmt)


State 22

   21 Stmt: OutputStmt .

    $default  reduce using rule 21 (Stmt)


State 23

   22 Stmt: AsgStmt .

    $default  reduce using rule 22 (Stmt)


State 24

   23 Stmt: Ifstmt .

    $default  reduce using rule 23 (Stmt)


State 25

   24 Stmt: Whilestmt .

    $default  reduce using rule 24 (Stmt)


State 26

   27 AsgStmt: Var . EQUALSTO E

    EQUALSTO  shift, and go to state 40


State 27

    2 Declarations: DECL DeclList ENDDECL .

    $default  reduce using rule 2 (Declarations)


State 28

    4 DeclList: DeclList Decl .

    $default  reduce using rule 4 (DeclList)


State 29

   14 VarList: MUL . ID

    ID  shift, and go to state 41


State 30

   13 VarList: ID .
   15        | ID . '[' NUM ']'
   16        | ID . '[' NUM ']' '[' NUM ']'

    '['  shift, and go to state 42

    $default  reduce using rule 13 (VarList)


State 31

    6 Decl: Type VarList .
    9 VarList: VarList . COMMA ID
   10        | VarList . COMMA MUL ID
   11        | VarList . COMMA ID '[' NUM ']'
   12        | VarList . COMMA ID '[' NUM ']' '[' NUM ']'

    COMMA  shift, and go to state 43

    $default  reduce using rule 6 (Decl)


State 32

   47 Var: MUL ID .

    $default  reduce using rule 47 (Var)


State 33

   45 Var: ID '[' . E ']'
   46    | ID '[' . E ']' '[' E ']'

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 46
    Var  go to state 47


State 34

   25 InputStmt: READ '(' . Var ')'

    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '&'  shift, and go to state 17

    Var  go to state 48


State 35

   26 OutputStmt: WRITE '(' . E ')'

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 49
    Var  go to state 47


State 36

   28 Ifstmt: IF '(' . E ')' then Slist Else Slist ENDIF
   29       | IF '(' . E ')' then Slist ENDIF

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 50
    Var  go to state 47


State 37

   30 Whilestmt: WHILE '(' . E ')' DO Slist ENDWHILE

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 51
    Var  go to state 47


State 38

   48 Var: '&' ID .

    $default  reduce using rule 48 (Var)


State 39

   18 Slist: Slist Stmt .

    $default  reduce using rule 18 (Slist)


State 40

   27 AsgStmt: Var EQUALSTO . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 52
    Var  go to state 47


State 41

   14 VarList: MUL ID .

    $default  reduce using rule 14 (VarList)


State 42

   15 VarList: ID '[' . NUM ']'
   16        | ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 53


State 43

    9 VarList: VarList COMMA . ID
   10        | VarList COMMA . MUL ID
   11        | VarList COMMA . ID '[' NUM ']'
   12        | VarList COMMA . ID '[' NUM ']' '[' NUM ']'

    MUL  shift, and go to state 54
    ID   shift, and go to state 55


State 44

   43 E: NUM .

    $default  reduce using rule 43 (E)


State 45

   41 E: '(' . E ')'

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 56
    Var  go to state 47


State 46

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E
   45 Var: ID '[' E . ']'
   46    | ID '[' E . ']' '[' E ']'

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ']'    shift, and go to state 67


State 47

   42 E: Var .

    $default  reduce using rule 42 (E)


State 48

   25 InputStmt: READ '(' Var . ')'

    ')'  shift, and go to state 68


State 49

   26 OutputStmt: WRITE '(' E . ')'
   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ')'    shift, and go to state 69


State 50

   28 Ifstmt: IF '(' E . ')' then Slist Else Slist ENDIF
   29       | IF '(' E . ')' then Slist ENDIF
   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ')'    shift, and go to state 70


State 51

   30 Whilestmt: WHILE '(' E . ')' DO Slist ENDWHILE
   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ')'    shift, and go to state 71


State 52

   27 AsgStmt: Var EQUALSTO E .
   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66

    MUL       [reduce using rule 27 (AsgStmt)]
    $default  reduce using rule 27 (AsgStmt)


State 53

   15 VarList: ID '[' NUM . ']'
   16        | ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 72


State 54

   10 VarList: VarList COMMA MUL . ID

    ID  shift, and go to state 73


State 55

    9 VarList: VarList COMMA ID .
   11        | VarList COMMA ID . '[' NUM ']'
   12        | VarList COMMA ID . '[' NUM ']' '[' NUM ']'

    '['  shift, and go to state 74

    $default  reduce using rule 9 (VarList)


State 56

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E
   41  | '(' E . ')'

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ')'    shift, and go to state 75


State 57

   31 E: E PLUS . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 76
    Var  go to state 47


State 58

   32 E: E MINUS . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 77
    Var  go to state 47


State 59

   33 E: E MUL . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 78
    Var  go to state 47


State 60

   34 E: E DIV . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 79
    Var  go to state 47


State 61

   40 E: E EQ . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 80
    Var  go to state 47


State 62

   39 E: E NE . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 81
    Var  go to state 47


State 63

   35 E: E LT . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 82
    Var  go to state 47


State 64

   36 E: E GT . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 83
    Var  go to state 47


State 65

   37 E: E LE . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 84
    Var  go to state 47


State 66

   38 E: E GE . E

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 85
    Var  go to state 47


State 67

   45 Var: ID '[' E ']' .
   46    | ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 86

    $default  reduce using rule 45 (Var)


State 68

   25 InputStmt: READ '(' Var ')' .

    $default  reduce using rule 25 (InputStmt)


State 69

   26 OutputStmt: WRITE '(' E ')' .

    $default  reduce using rule 26 (OutputStmt)


State 70

   28 Ifstmt: IF '(' E ')' . then Slist Else Slist ENDIF
   29       | IF '(' E ')' . then Slist ENDIF

    then  shift, and go to state 87


State 71

   30 Whilestmt: WHILE '(' E ')' . DO Slist ENDWHILE

    DO  shift, and go to state 88


State 72

   15 VarList: ID '[' NUM ']' .
   16        | ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 89

    $default  reduce using rule 15 (VarList)


State 73

   10 VarList: VarList COMMA MUL ID .

    $default  reduce using rule 10 (VarList)


State 74

   11 VarList: VarList COMMA ID '[' . NUM ']'
   12        | VarList COMMA ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 90


State 75

   41 E: '(' E ')' .

    $default  reduce using rule 41 (E)


State 76

   31 E: E . PLUS E
   31  | E PLUS E .
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    MUL  shift, and go to state 59
    DIV  shift, and go to state 60
    EQ   shift, and go to state 61
    NE   shift, and go to state 62
    LT   shift, and go to state 63
    GT   shift, and go to state 64
    LE   shift, and go to state 65
    GE   shift, and go to state 66

    $default  reduce using rule 31 (E)


State 77

   31 E: E . PLUS E
   32  | E . MINUS E
   32  | E MINUS E .
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    MUL  shift, and go to state 59
    DIV  shift, and go to state 60
    EQ   shift, and go to state 61
    NE   shift, and go to state 62
    LT   shift, and go to state 63
    GT   shift, and go to state 64
    LE   shift, and go to state 65
    GE   shift, and go to state 66

    $default  reduce using rule 32 (E)


State 78

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   33  | E MUL E .
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    EQ  shift, and go to state 61
    NE  shift, and go to state 62
    LT  shift, and go to state 63
    GT  shift, and go to state 64
    LE  shift, and go to state 65
    GE  shift, and go to state 66

    $default  reduce using rule 33 (E)


State 79

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   34  | E DIV E .
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    EQ  shift, and go to state 61
    NE  shift, and go to state 62
    LT  shift, and go to state 63
    GT  shift, and go to state 64
    LE  shift, and go to state 65
    GE  shift, and go to state 66

    $default  reduce using rule 34 (E)


State 80

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E
   40  | E EQ E .

    $default  reduce using rule 40 (E)


State 81

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   39  | E NE E .
   40  | E . EQ E

    $default  reduce using rule 39 (E)


State 82

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   35  | E LT E .
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 35 (E)


State 83

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   36  | E GT E .
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 36 (E)


State 84

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   37  | E LE E .
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E

    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 37 (E)


State 85

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   38  | E GE E .
   39  | E . NE E
   40  | E . EQ E

    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 38 (E)


State 86

   46 Var: ID '[' E ']' '[' . E ']'

    NUM  shift, and go to state 44
    MUL  shift, and go to state 11
    ID   shift, and go to state 12
    '('  shift, and go to state 45
    '&'  shift, and go to state 17

    E    go to state 91
    Var  go to state 47


State 87

   28 Ifstmt: IF '(' E ')' then . Slist Else Slist ENDIF
   29       | IF '(' E ')' then . Slist ENDIF

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    Slist       go to state 92
    Stmt        go to state 20
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 88

   30 Whilestmt: WHILE '(' E ')' DO . Slist ENDWHILE

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    Slist       go to state 93
    Stmt        go to state 20
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 89

   16 VarList: ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 94


State 90

   11 VarList: VarList COMMA ID '[' NUM . ']'
   12        | VarList COMMA ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 95


State 91

   31 E: E . PLUS E
   32  | E . MINUS E
   33  | E . MUL E
   34  | E . DIV E
   35  | E . LT E
   36  | E . GT E
   37  | E . LE E
   38  | E . GE E
   39  | E . NE E
   40  | E . EQ E
   46 Var: ID '[' E ']' '[' E . ']'

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58
    MUL    shift, and go to state 59
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62
    LT     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    GE     shift, and go to state 66
    ']'    shift, and go to state 96


State 92

   18 Slist: Slist . Stmt
   28 Ifstmt: IF '(' E ')' then Slist . Else Slist ENDIF
   29       | IF '(' E ')' then Slist . ENDIF

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    ENDIF  shift, and go to state 97
    Else   shift, and go to state 98
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    Stmt        go to state 39
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 93

   18 Slist: Slist . Stmt
   30 Whilestmt: WHILE '(' E ')' DO Slist . ENDWHILE

    MUL       shift, and go to state 11
    ID        shift, and go to state 12
    READ      shift, and go to state 13
    WRITE     shift, and go to state 14
    IF        shift, and go to state 15
    WHILE     shift, and go to state 16
    ENDWHILE  shift, and go to state 99
    '&'       shift, and go to state 17

    Stmt        go to state 39
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 94

   16 VarList: ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 100


State 95

   11 VarList: VarList COMMA ID '[' NUM ']' .
   12        | VarList COMMA ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 101

    $default  reduce using rule 11 (VarList)


State 96

   46 Var: ID '[' E ']' '[' E ']' .

    $default  reduce using rule 46 (Var)


State 97

   29 Ifstmt: IF '(' E ')' then Slist ENDIF .

    $default  reduce using rule 29 (Ifstmt)


State 98

   28 Ifstmt: IF '(' E ')' then Slist Else . Slist ENDIF

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    Slist       go to state 102
    Stmt        go to state 20
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 99

   30 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE .

    $default  reduce using rule 30 (Whilestmt)


State 100

   16 VarList: ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 16 (VarList)


State 101

   12 VarList: VarList COMMA ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 103


State 102

   18 Slist: Slist . Stmt
   28 Ifstmt: IF '(' E ')' then Slist Else Slist . ENDIF

    MUL    shift, and go to state 11
    ID     shift, and go to state 12
    READ   shift, and go to state 13
    WRITE  shift, and go to state 14
    IF     shift, and go to state 15
    ENDIF  shift, and go to state 104
    WHILE  shift, and go to state 16
    '&'    shift, and go to state 17

    Stmt        go to state 39
    InputStmt   go to state 21
    OutputStmt  go to state 22
    AsgStmt     go to state 23
    Ifstmt      go to state 24
    Whilestmt   go to state 25
    Var         go to state 26


State 103

   12 VarList: VarList COMMA ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 105


State 104

   28 Ifstmt: IF '(' E ')' then Slist Else Slist ENDIF .

    $default  reduce using rule 28 (Ifstmt)


State 105

   12 VarList: VarList COMMA ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 12 (VarList)
